// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "REST APIs for scanning and querying vulnerability scan results from GitHub.",
    "title": "Vulnerability Scan API",
    "version": "1.0.0"
  },
  "paths": {
    "/query": {
      "post": {
        "summary": "Query stored scan results using filters",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "filters"
              ],
              "properties": {
                "filters": {
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching results",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid filter",
            "schema": {
              "format": "string"
            }
          }
        }
      }
    },
    "/scan": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Scan files in a repository",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Scan complete",
            "schema": {
              "format": "json"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "format": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ScanRequest": {
      "type": "object",
      "required": [
        "repo",
        "files"
      ],
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "filename1",
            "filename2"
          ]
        },
        "repo": {
          "type": "string",
          "example": "FASDFASD"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "REST APIs for scanning and querying vulnerability scan results from GitHub.",
    "title": "Vulnerability Scan API",
    "version": "1.0.0"
  },
  "paths": {
    "/query": {
      "post": {
        "summary": "Query stored scan results using filters",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "filters"
              ],
              "properties": {
                "filters": {
                  "type": "object"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching results",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Invalid filter",
            "schema": {
              "format": "string"
            }
          }
        }
      }
    },
    "/scan": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "summary": "Scan files in a repository",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScanRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Scan complete",
            "schema": {
              "format": "json"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "format": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ScanRequest": {
      "type": "object",
      "required": [
        "repo",
        "files"
      ],
      "properties": {
        "files": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "filename1",
            "filename2"
          ]
        },
        "repo": {
          "type": "string",
          "example": "FASDFASD"
        }
      }
    }
  }
}`))
}
